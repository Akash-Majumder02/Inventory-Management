{"ast":null,"code":"import React,{useState}from'react';import'./addProduct.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddProduct=()=>{const[productId,setProductId]=useState('');const[productName,setProductName]=useState('');const[brand,setBrand]=useState('');const[supplier,setSupplier]=useState('');const[cost,setCost]=useState(0);const[subcategory,setSubcategory]=useState('');const[products,setProducts]=useState([]);// In-memory product data store\nconst categories=['electronics','wearables','consumerGoods','food'];const handleSubmit=event=>{event.preventDefault();const newProduct={productId,productName,brand,supplier,cost,category:selectedCategory,// Use selectedCategory from state\nsubcategory};setProducts([...products,newProduct]);// Add new product to in-memory data\n// Clear form fields after submission (optional)\nsetProductId('');setProductName('');setBrand('');setSupplier('');setCost(0);setSelectedCategory('');// Clear selected category\nsetSubcategory('');};const[selectedCategory,setSelectedCategory]=useState('');const handleFileUpload=event=>{const file=event.target.files[0];// Implement logic to process the uploaded Excel file\n// You'll need an external library like `xlsx` to parse the file\n// This is an example using `xlsx` (not included by default):\n//\n// const reader = new FileReader();\n// reader.onload = (e) => {\n//   const arrayBuffer = e.target.result;\n//   const workbook = XLSX.read(arrayBuffer, { type: 'array' });\n//   const sheetName = workbook.SheetNames[0];\n//   const worksheet = workbook.Sheets[sheetName];\n//   // Extract product data from the worksheet and add to products state\n// };\n// reader.readAsArrayBuffer(file);\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"add-product-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"upload-button-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"fileUpload\",children:\"Upload Excel File (Optional):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"fileUpload\",accept:\".xlsx,.xlsm,.xlsb\",onChange:handleFileUpload})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Add Product\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"productId\",children:\"Product ID:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"productId\",value:productId,onChange:e=>setProductId(e.target.value),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"productName\",children:\"Product Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"productName\",value:productName,onChange:e=>setProductName(e.target.value),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"brand\",children:\"Brand:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"brand\",value:brand,onChange:e=>setBrand(e.target.value),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"supplier\",children:\"Supplier:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"supplier\",value:supplier,onChange:e=>setSupplier(e.target.value),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cost\",children:\"Cost:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"cost\",value:cost,onChange:e=>setCost(e.target.value),required:true}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"category\",children:\"Category:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"category\",value:selectedCategory,onChange:e=>setSelectedCategory(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Category\"}),categories.map(category=>/*#__PURE__*/_jsx(\"option\",{value:category,children:category},category))]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"subcategory\",children:\"Subcategory:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"subcategory\",value:subcategory,onChange:e=>setSubcategory(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Product\"})]})]});};export default AddProduct;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","AddProduct","productId","setProductId","productName","setProductName","brand","setBrand","supplier","setSupplier","cost","setCost","subcategory","setSubcategory","products","setProducts","categories","handleSubmit","event","preventDefault","newProduct","category","selectedCategory","setSelectedCategory","handleFileUpload","file","target","files","className","children","htmlFor","type","id","accept","onChange","onSubmit","value","e","required","map"],"sources":["D:/Projects/Java/com.inventory/com.inventory.webapp/src/components/addProduct.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './addProduct.css';\r\n\r\nconst AddProduct = () => {\r\n  const [productId, setProductId] = useState('');\r\n  const [productName, setProductName] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [supplier, setSupplier] = useState('');\r\n  const [cost, setCost] = useState(0);\r\n  const [subcategory, setSubcategory] = useState('');\r\n\r\n  const [products, setProducts] = useState([]); // In-memory product data store\r\n\r\n  const categories = ['electronics', 'wearables', 'consumerGoods', 'food'];\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newProduct = {\r\n      productId,\r\n      productName,\r\n      brand,\r\n      supplier,\r\n      cost,\r\n      category: selectedCategory, // Use selectedCategory from state\r\n      subcategory,\r\n    };\r\n\r\n    setProducts([...products, newProduct]); // Add new product to in-memory data\r\n\r\n    // Clear form fields after submission (optional)\r\n    setProductId('');\r\n    setProductName('');\r\n    setBrand('');\r\n    setSupplier('');\r\n    setCost(0);\r\n    setSelectedCategory(''); // Clear selected category\r\n    setSubcategory('');\r\n  };\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n\r\n    // Implement logic to process the uploaded Excel file\r\n    // You'll need an external library like `xlsx` to parse the file\r\n    // This is an example using `xlsx` (not included by default):\r\n    //\r\n    // const reader = new FileReader();\r\n    // reader.onload = (e) => {\r\n    //   const arrayBuffer = e.target.result;\r\n    //   const workbook = XLSX.read(arrayBuffer, { type: 'array' });\r\n    //   const sheetName = workbook.SheetNames[0];\r\n    //   const worksheet = workbook.Sheets[sheetName];\r\n    //   // Extract product data from the worksheet and add to products state\r\n    // };\r\n    // reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-product-page\">\r\n      \r\n      <div className=\"upload-button-container\">\r\n        <label htmlFor=\"fileUpload\">Upload Excel File (Optional):</label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"fileUpload\"\r\n          accept=\".xlsx,.xlsm,.xlsb\"\r\n          onChange={handleFileUpload}\r\n        />\r\n      </div>\r\n      <h2>Add Product</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"productId\">Product ID:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"productId\"\r\n          value={productId}\r\n          onChange={(e) => setProductId(e.target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"productName\">Product Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"productName\"\r\n          value={productName}\r\n          onChange={(e) => setProductName(e.target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"brand\">Brand:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"brand\"\r\n          value={brand}\r\n          onChange={(e) => setBrand(e.target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"supplier\">Supplier:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"supplier\"\r\n          value={supplier}\r\n          onChange={(e) => setSupplier(e.target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"cost\">Cost:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"cost\"\r\n          value={cost}\r\n          onChange={(e) => setCost(e.target.value)}\r\n          required\r\n        />\r\n        <label htmlFor=\"category\">Category:</label>\r\n        <select\r\n          id=\"category\"\r\n          value={selectedCategory}\r\n          onChange={(e) => setSelectedCategory(e.target.value)}\r\n          required\r\n        >\r\n          <option value=\"\">Select Category</option>\r\n          {categories.map((category) => (\r\n            <option key={category} value={category}>\r\n              {category}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <label htmlFor=\"subcategory\">Subcategory:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"subcategory\"\r\n          value={subcategory}\r\n          onChange={(e) => setSubcategory(e.target.value)}\r\n          required\r\n        />\r\n         \r\n        <button type=\"submit\">Add Product</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}