{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Java\\\\com.inventory\\\\com.inventory.webapp\\\\src\\\\components\\\\Functions\\\\ProductForm.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProductForm({\n  props,\n  detail,\n  type,\n  list\n}) {\n  const [prop, setProp] = props;\n  const detailName = detail.toUpperCase();\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setProp({\n      ...prop,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: type === \"text\" || type === \"number\" || type === \"password\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: detail,\n        className: \"label\",\n        children: [detailName, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: type,\n        name: detail,\n        value: prop.detail,\n        onChange: handleChange,\n        required: true,\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: detail,\n        className: \"label\",\n        children: [detailName, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: detail,\n        value: prop.detail,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), list === null || list === void 0 ? void 0 : list.map(res => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: res,\n          children: res\n        }, res, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductForm","props","detail","type","list","prop","setProp","detailName","toUpperCase","handleChange","event","name","value","target","children","htmlFor","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","required","map","res","_c","$RefreshReg$"],"sources":["D:/Projects/Java/com.inventory/com.inventory.webapp/src/components/Functions/ProductForm.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nfunction ProductForm({props,detail,type,list}) {\r\n  const [prop,setProp] = props\r\n  const detailName = detail.toUpperCase();\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setProp({ ...prop, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {type === \"text\" || type === \"number\" || type === \"password\"? (\r\n      <>\r\n        <label htmlFor={detail} className=\"label\">{detailName}:</label>\r\n        <input type={type} name={detail} value={prop.detail} onChange={handleChange} required className=\"input\"/>\r\n      </>\r\n    ) : (\r\n      <>\r\n        <label htmlFor={detail} className=\"label\">{detailName}:</label>\r\n        <select name={detail} value={prop.detail} onChange={handleChange} required>\r\n        <option value=\"\">Select Category</option>\r\n          {list?.map((res) => (\r\n            <option key={res} value={res}>\r\n              {res}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </>\r\n    )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,WAAWA,CAAC;EAACC,KAAK;EAACC,MAAM;EAACC,IAAI;EAACC;AAAI,CAAC,EAAE;EAC7C,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGL,KAAK;EAC5B,MAAMM,UAAU,GAAGL,MAAM,CAACM,WAAW,CAAC,CAAC;EACvC,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCP,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EACrC,CAAC;EAED,oBACEf,OAAA;IAAAiB,QAAA,EACGX,IAAI,KAAK,MAAM,IAAIA,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAK,UAAU,gBAC5DN,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA;QAAOkB,OAAO,EAAEb,MAAO;QAACc,SAAS,EAAC,OAAO;QAAAF,QAAA,GAAEP,UAAU,EAAC,GAAC;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/DvB,OAAA;QAAOM,IAAI,EAAEA,IAAK;QAACQ,IAAI,EAAET,MAAO;QAACU,KAAK,EAAEP,IAAI,CAACH,MAAO;QAACmB,QAAQ,EAAEZ,YAAa;QAACa,QAAQ;QAACN,SAAS,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA,eACzG,CAAC,gBAEHvB,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA;QAAOkB,OAAO,EAAEb,MAAO;QAACc,SAAS,EAAC,OAAO;QAAAF,QAAA,GAAEP,UAAU,EAAC,GAAC;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/DvB,OAAA;QAAQc,IAAI,EAAET,MAAO;QAACU,KAAK,EAAEP,IAAI,CAACH,MAAO;QAACmB,QAAQ,EAAEZ,YAAa;QAACa,QAAQ;QAAAR,QAAA,gBAC1EjB,OAAA;UAAQe,KAAK,EAAC,EAAE;UAAAE,QAAA,EAAC;QAAe;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACtChB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmB,GAAG,CAAEC,GAAG,iBACb3B,OAAA;UAAkBe,KAAK,EAAEY,GAAI;UAAAV,QAAA,EAC1BU;QAAG,GADOA,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA,eACT;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEV;AAACK,EAAA,GA9BQzB,WAAW;AAgCpB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}